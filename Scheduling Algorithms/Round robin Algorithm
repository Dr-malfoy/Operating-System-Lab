#include <iostream>
using namespace std;

int main() {
    int n, tq;
    cout << "Enter number of processes: ";
    cin >> n;

    int at[20], bt[20], rt[20], ct[20], tat[20], wt[20];
    int i;

    for (i = 0; i < n; i++) {
        cout << "Enter Arrival Time of P" << i + 1 << ": ";
        cin >> at[i];
        cout << "Enter Burst Time of P" << i + 1 << ": ";
        cin >> bt[i];
        rt[i] = bt[i];  // initially remaining = burst
    }

    cout << "Enter Time Quantum: ";
    cin >> tq;

    int time = 0, done = 0;
    while (done < n) {
        bool executed = false; // to check if some process ran in this cycle

        for (i = 0; i < n; i++) {
            if (rt[i] > 0 && at[i] <= time) {
                executed = true;
                if (rt[i] > tq) {
                    time += tq;
                    rt[i] -= tq;
                } else {
                    time += rt[i];
                    rt[i] = 0;
                    ct[i] = time;
                    tat[i] = ct[i] - at[i];
                    wt[i] = tat[i] - bt[i];
                    done++;
                }
            }
        }

        // if no process executed, jump to the next process arrival time
        if (!executed) {
            int nextArrival = 1e9;
            for (int j = 0; j < n; j++) {
                if (rt[j] > 0) {
                    nextArrival = min(nextArrival, at[j]);
                }
            }
            if (nextArrival != 1e9) {
                time = nextArrival;
            }
        }
    }

    cout << "\nProcess\tAT\tBT\tCT\tTAT\tWT\n";
    float avgTAT = 0, avgWT = 0;
    for (i = 0; i < n; i++) {
        cout << "P" << i + 1 << "\t" << at[i] << "\t" << bt[i]
             << "\t" << ct[i] << "\t" << tat[i] << "\t" << wt[i] << endl;
        avgTAT += tat[i];
        avgWT += wt[i];
    }

    cout << "\nAverage Turnaround Time = " << avgTAT / n;
    cout << "\nAverage Waiting Time = " << avgWT / n << endl;

    return 0;
}
